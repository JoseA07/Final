--PUNTO 1
CREATE TYPE number_array AS VARRAY(100) OF INTEGER;

CREATE OR REPLACE FUNCTION divisible_sum_pairs (P_ARRAY1 IN number_array, k IN INTEGER) 
RETURN INTEGER AS
PARES INTEGER;
RESULTADO INTEGER;
DIV INTEGER;
Error exception;

BEGIN
FOR i IN P_ARRAY1.FIRST .. P_ARRAY1.LAST LOOP
		FOR j IN P_ARRAY1(i+1) .. P_ARRAY1.LAST LOOP  
    RESULTADO := P_ARRAY1(i) + P_ARRAY1(j);
    DIV :=  MOD(RESULTADO, K);
		IF ((P_ARRAY1(i) < P_ARRAY1(j)) AND (DIV = 0)) THEN    
			PARES := PARES + 1;
    ELSIF k < 1 THEN
      RAISE ERROR;
		END IF;
		END LOOP;  
	END LOOP;
	return PARES;
  EXCEPTION
  when Error then
	dbms_output.put_line('El numero k es menor a 1');
  return 0;
  when OTHERS then 
  dbms_output.put_line('Ocurrió un error con los valores');
  return 0;

END;


DECLARE  
	P_ARRAY1 number_array;   
  k INTEGER := 3;
	PARES INTEGER;
BEGIN
	P_ARRAY1 := number_array(1, 3, 2, 6, 1, 2);  
	PARES := divisible_sum_pairs(P_ARRAY1, K);
	DBMS_OUTPUT.put_line('EL NUMERO DE PARES ES: ' || PARES);
END;


--PUNTO 2
CREATE OR REPLACE FUNCTION find_digits(n IN INTEGER, d IN INTEGER) 
RETURN INTEGER AS
RESULTADO INTEGER;
numero varchar2(255);

BEGIN
   numero := TO_CHAR(n);
   


END;